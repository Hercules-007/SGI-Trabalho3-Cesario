<%- include("header") -%>
  <% if (user) { %>
    <a href="/dashboard">Dashboard</a>
    <a href="/auth/logout">Logout</a>
  <% } else { %>

    <nav class="navbar navbar-expand-lg bg-body-tertiary" style="background-color: #e3f2fd;">
      <div class="container-md">
        <a href="/auth/google"><button type="button" class="btn btn-primary">Login with Google</button></a>
        <form action="/login/password" method="POST">
          <input id="username" name="username" type="text" placeholder="Login with Passkey" class="btn btn-outline-primary" autocomplete="username webauthn" required autofocus>
        </form>
      </div>
    </nav>
  <% } %>

<script type="text/javascript" src="/js/login.js"></script>
<script type="text/javascript" src="/js/base64url.js"></script>

<script>
  // Check if platform authenticator is available
  window.PublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable().then(
          result => {
            if (!result) {
              console.log("No platform authenticator found. If your OS does not come with one, try using devtools to set one up.");
            }
          }
  );


  let abortController;
  let abortSignal;

  let startConditionalRequest = async () => {
    if (window.PublicKeyCredential.isConditionalMediationAvailable) {
      console.log("Conditional UI is understood by the browser");
      if (!await window.PublicKeyCredential.isConditionalMediationAvailable()) {
        console.log("Conditional UI is understood by your browser but not available");
        return;
      }
    } else {
      if (!navigator.credentials.conditionalMediationSupported) {
        console.log("Your browser does not implement Conditional UI (are you running the right chrome/safari version with the right flags?)");
        return;
      } else {
        console.log("This browser understand the old version of Conditional UI feature detection");
      }
    }
    abortController = new AbortController();
    abortSignal = abortController.signal;

    try {
      let credential = await window.navigator.credentials.get({
        signal: abortSignal,
        publicKey: {
          // Don't do this in production!
          challenge: new Uint8Array([1, 2, 3, 4]),
          allowCredentials: []
        },
        mediation: "conditional"
      });
      if (credential) {
        let username = String.fromCodePoint(...new Uint8Array(credential.response.userHandle));
        console.log(username);
      } else {
        console.log("Credential returned null");
      }
    } catch (error) {
      if (error.name == "AbortError") {
        console.log("request aborted");
        return;
      }
      console.log(error.toString());
    }
  }

  startConditionalRequest();
</script>
</body>
</html>
